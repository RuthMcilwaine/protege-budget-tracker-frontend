{"version":3,"sources":["components/Nav.js","components/ProtegeView.js","components/GetProtegeData.js","components/CreateItem.js","components/EditItem.js","components/DeleteItem.js","components/Proteges.js","components/CreateProtege.js","components/EditProtege.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","react_router_dom","to","className","React","Component","calculateExpenditure","items","reduce","total","item","expenditure","ProtegeView","props","_props$protege","protege","protegename","protegeemail","map","index","key","description","pathname","state","index_es","icon","faEdit","background-color","faTrash","renderItems","concat","_id","faPlus","checkExpenditure","faChevronLeft","faUserEdit","type","onClick","e","window","confirm","preventDefault","console","log","length","alert","axios","delete","process","then","res","status","location","deleteProtege","GetProtegeData","protegeId","this","match","params","id","getOneProtege","fetch","protegeResponse","json","protegeData","setState","components_ProtegeView","CreateItem","_this","date","Date","errorMessages","handleCancel","onChange","Object","defineProperty","target","value","onSubmit","newItem","post","data","catch","err","response","messages","displayErrors","errors","error","placeholder","class","handleClick","EditItem","adding","protege_id","onChangeDescription","onChangeExpenditure","itemId","patch","required","react_router","Proteges","Table","renderProteges","proteges","CreateProtege","balance","addingUser","addProtege","handleChange","htmlFor","EditProtege","editing","filledForm","updateProtege","formFilled","updatingDone","Routes","Nav_Nav","path","component","render","components_CreateProtege","routeProps","EditProtege_EditProtege","assign","DeleteItem","exact","components_Proteges","App","name","email","clearErrorMessages","newProtege","updatedProtegeData","mutatedProtege","push","getProteges","prevProps","prevState","_this$state","src_Routes","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31248a44.chunk.js","sourcesContent":["import React from 'react';\nimport { Link} from \"react-router-dom\";\n\n  export default class Nav extends React.Component {\n    render() {    \n      return (\n        <nav>\n          <div>\n            <Link to=\"/\" className=\"Nav__brand\">\n              {/* <img src=\"logo.svg\" className=\"Nav__logo\" /> */}\n            </Link>\n\n            <div>\n              <ul>\n                <li>\n                <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                  <Link to=\"/add\">Add a new protege</Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n      );\n    }\n  }","// This component contains the functions responsible for rendering the 'View protege' page\n\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios'\nimport './Buttons.css'\nimport './protegeview.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faUserEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\n\n\n// Renders the purchased items as a list. Called in the ProtegeView function below.\n\nconst renderItems = (items) => {\n  // const buttonStyle = { backgroundColor: 'yellow' }\n  return items.map((item, index) => {\n    return (\n      <div className= \"List\">\n      <div key={index}>\n        <ul>\n       <li>{item.description} | $ {item.expenditure}</li> \n          <Link to= {{\n            pathname: \"/edit\",\n            state: {\n              item,\n            }\n          }}>\n          <button className=\"button1\">\n          Edit Item <FontAwesomeIcon icon={ faEdit } background-color=\"purple\"/>\n          </button>\n          </Link>  \n          <Link to= {{\n            pathname: \"/delete\",\n            state: {\n              item,\n            }\n          }}>\n          <button className = \"button1\">Delete Item <FontAwesomeIcon icon={ faTrash }/></button>\n          </Link>\n        </ul>\n      </div>\n      </div>\n    )\n  })\n  \n} \n\n// This function calculates the total Expenditure by adding the expenditure of each item. Called in the ProtegeView function below\nconst calculateExpenditure = (items) => items.reduce((total, item) => total + item.expenditure, 0)\n\n// Checks the protege isn't over their limit\nconst checkExpenditure = (protege, items) => {\n  if (calculateExpenditure (items) >= 1000) {\n      return <p>Protege has reached their limit</p>\n  } else \n      return(<p><Link to= {{\n        pathname: `/create/${protege._id}`,\n        }}>\n        <button className=\"button1\">\n          Add Item <FontAwesomeIcon icon={ faPlus }/>\n          </button>\n        </Link></p> )\n}\n\n// This function validates the protege has no purchases before deleting the protege\nconst deleteProtege = (e, protege, items) => {\n  e.preventDefault();\n  console.log(protege)\n  console.log(items)\n  if (items.length !== 0) {\n    return window.alert('Please delete all items before you delete the protege')\n  }\n    else {\n      axios.delete(`${process.env.REACT_APP_BACKEND_URL}/proteges/${protege._id}`)\n    .then (res => {\n      console.log(res)\n    if (res.status === 200) {\n      window.location = '/';\n    }})\n  } \n}\n\n// Renders a page with one protege's details, using props passed down to it from the GetProtegeData component. This function calls the renderItems and the calculateExpenditure Functions\n// It also calls the deleteProtege function on click\n\nconst ProtegeView = (props) => {\n  const {protege, items} = props.protege\n\n  return (\n    <div className=\"list1\">\n      <p>Name: {protege.protegename}</p>\n      <p>Email: {protege.protegeemail}</p>\n      <p>Items purchased: {renderItems(items)}</p>\n      <p>Total spent: {calculateExpenditure(items)}</p>\n      <p>Balance: {1000 - calculateExpenditure(items)}</p>\n      {checkExpenditure(protege, items)}\n      <Link to= {{\n            pathname: '/'\n          }}>\n          <button className=\"button1\">\n         <FontAwesomeIcon icon={ faChevronLeft }/> Back\n          </button>\n          </Link> \n      <Link to= {{\n            pathname: `/editprotege/${protege._id}`\n          }}>\n          <button className=\"button1\">\n          Edit protege details <FontAwesomeIcon icon={ faUserEdit }/>\n          </button>\n          </Link> \n          <button className=\"button1\" type=\"submit\" onClick={e => {if (window.confirm('Are you sure you want to delete protege')) deleteProtege(e, protege, items)}}>\n          Delete Protege <FontAwesomeIcon icon={ faTrash }/>\n            </button>\n            \n    </div>\n  )\n}\n\nexport default ProtegeView;","// This component gets the protege data and sends it as props to the protegeView component\n\nimport React from 'react';\nimport ProtegeView from './ProtegeView'\n\nclass GetProtegeData extends React.Component {\n  \n  state = {\n    protege: null\n  }\n  \n  async componentDidMount() {\n    const protegeId = this.props.match.params.id\n    const getOneProtege = `${process.env.REACT_APP_BACKEND_URL}/proteges/${protegeId}`\n    const protegeResponse = await fetch(getOneProtege)\n    const protegeData = await protegeResponse.json()\n\n    this.setState({\n      protege: protegeData    \n    })\n  }\n  render() {\n    const { protege } = this.state\n    if (!protege) {\n      return null\n    }\n    return (\n      <ProtegeView protege={protege} />\n    )\n  }\n}\n\nexport default GetProtegeData","// Component for creating an item\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './form.css'\n\nexport default class CreateItem extends Component {\n  \n  // protege id is picked up from url\n  state = {\n      protegeId: this.props.match.params.id,\n      description: '',\n      date: new Date(),\n      errorMessages: []\n    }\n  \n    handleCancel = (e) => {\n      window.location = `/proteges/${this.props.match.params.id}`;\n    }\n\n    onChange = (e) => {\n      this.setState({ [e.target.id]: e.target.value})\n    }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    // collects data from state, sends post request and redirects back to the page where the protege where the item was added\n    const newItem = {\n      protegeId: this.state.protegeId,\n      description: this.state.description,\n      expenditure: this.state.expenditure,\n      date: this.state.date\n    }\n\n    console.log(newItem);\n    \n    axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/add`, newItem)\n      .then(res => {\n      console.log(res.data)\n      window.location = `/proteges/${this.props.match.params.id}`\n    })\n    .catch((err) => {\n      this.setState({errorMessages: err.response.data.messages})\n    })\n  }\n\n// displays the error messages\ndisplayErrors = (errors) => {\n    return errors.map((error, index) => {\n      return (\n        <div key={index}>\n          <p>{error}</p>\n        </div>\n      )\n    })\n  } \n\n  // Form for collecting item data\n  render() {\n     let errorMessages = this.state.errorMessages\n     console.log(errorMessages)\n    return (\n    <div className=\"form-box\">\n        <div className=\"form-container-item\">\n          <div className=\"form-header-box\">\n            <h2 className=\"form-header\">Register a purchase</h2>\n          </div>\n      <form className=\"form\" onSubmit={this.onSubmit}>\n        <div className=\"form-group\"> \n          <label className=\"label\">Description </label>\n          <input  type=\"text\"\n              id=\"description\"\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChange}\n              placeholder=\"description of purchase\"\n              />\n        </div>\n        <div className=\"form-group\">\n          <label className=\"label\">Expenditure </label>\n             <div class=\"input-icon\">\n                <input \n                    type=\"number\" \n                    id=\"expenditure\"\n                    className=\"form-control\"\n                    value={this.state.expenditure}\n                    onChange={this.onChange}\n                    placeholder=\"price\"\n                    />\n                    <i>$</i>\n              </div>\n        </div>\n        <div className=\"buttons\">\n          <button className =\"purple-button-form\" onClick={this.handleClick}>Save</button>\n          <button className =\"pink-button-form\" onClick={this.handleCancel}>Cancel</button>\n        </div>\n      </form>\n      <div><p className=\"error-message\">{this.displayErrors(errorMessages)}</p></div>\n    </div>\n    </div>\n    )\n  }\n}","// Component used for updating an item \n\nimport React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom'\nimport axios from 'axios';\nimport './form.css'\n\nexport default class EditItem extends Component {\n    state = {\n      description: '',\n      expenditure: '',\n      adding: true,\n      errorMessages: []\n    }\n  \n  handleCancel = (e) => {\n    e.preventDefault();\n    window.location = `/proteges/${this.props.location.state.item.protege_id}`;\n  }\n\n  // Sets the state from the props passed in via the link on the ProtegeView page\n  componentDidMount(){\n    this.setState({\n      description: this.props.location.state.item.description,\n      expenditure: this.props.location.state.item.expenditure,\n      itemId: this.props.location.state.item._id,\n      protegeId: this.props.location.state.item.protege_id\n    })\n    console.log(this.props.location.state.item)\n  }\n\n  // Handles changes in form and updates state\n  onChangeDescription = (e) => {\n    this.setState({\n      description: e.target.value\n    })\n  }\n\n  onChangeExpenditure = (e) => {\n    this.setState({\n      expenditure: e.target.value\n    })\n  }\n\n// On click this function creates an item and sends it via a patch request \n  handleClick = (e) => {\n    e.preventDefault();\n\n    const item = {\n      description: this.state.description,\n      expenditure: this.state.expenditure,\n      itemId: this.state.itemId,\n      protegeId: this.state.protegeId\n    }\n    console.log('edit')\n    console.log(item);\n\n   axios.patch(`${process.env.REACT_APP_BACKEND_URL}/items/update/${item.itemId}`, item)\n      .then(res => {\n        console.log(res.data)\n        window.location = `/proteges/${this.props.location.state.item.protege_id}`\n      })\n      .catch((err) => {\n        this.setState({errorMessages: err.response.data.messages})\n      })\n    }\n\n// Displays the error messages\n  displayErrors = (errors) => {\n    return errors.map((error, index) => {\n      return (\n        <div key={index}>\n          <p>{error}</p>\n        </div>\n      )\n    })\n  } \n\n\n  // Form is rendered if adding state is true, else it redirects home\n  render() {\n     let errorMessages = this.state.errorMessages\n\n    if (this.state.adding === true) {\n    return (\n    <div>\n      <div className=\"form-box\">\n        <div className=\"form-container-item\">\n          <div className=\"form-header-box\">\n            <h2 className=\"form-header\">Edit a purchase</h2>\n          </div>\n      <form className=\"form\" onSubmit={this.onSubmit}>\n        <div className=\"form-group\"> \n          <label className=\"label\">Description </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label className=\"label\">Expenditure </label>\n          <div class=\"input-icon\">\n          <input \n              type=\"number\" \n              required\n              className=\"form-control\"\n              value={this.state.expenditure}\n              onChange={this.onChangeExpenditure}\n              placeholder=\"price\"\n              />\n              <i>$</i>\n          </div>\n        </div>\n        <div className=\"buttons\">\n          <button className =\"purple-button-form\" onClick={this.handleClick}>Update</button>\n          <button className =\"pink-button-form\" onClick={this.handleCancel}>Cancel</button>\n        </div>\n      </form>\n      <div><p className=\"error-message\">{this.displayErrors(errorMessages)}</p></div>\n    </div>\n    </div>\n    </div>\n    )\n  } else\n  return (\n    <Redirect to='/' />\n  )\n}\n}","// Component used for deleting an item\n\nimport React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom'\nimport axios from 'axios';\nimport './form.css'\nimport './DeleteItem.css'\nexport default class EditItem extends Component {\n \n    state = {\n      description: '',\n      expenditure: '',\n      adding: true\n    }\n  \n  handleCancel = (e) => {\n    e.preventDefault();\n    window.location = `/proteges/${this.props.location.state.item.protege_id}`;\n  }\n\n  componentDidMount(){\n    this.setState({\n      description: this.props.location.state.item.description,\n      expenditure: this.props.location.state.item.expenditure,\n      itemId: this.props.location.state.item._id,\n      protegeId: this.props.location.state.item.protege_id\n    })\n    console.log(this.props.location.state.item)\n  }\n\n\n  handleClick = (e) => {\n    e.preventDefault();\n  \n    const item = {\n      description: this.state.description,\n      expenditure: this.state.expenditure,\n      itemId: this.state.itemId,\n      protegeId: this.state.protegeId\n    }\n    console.log('edit')\n    console.log(item);\n    \n\n    axios.delete(`${process.env.REACT_APP_BACKEND_URL}/items/${item.itemId}`, item)\n      .then(res => console.log(res.data));\n    window.location = `/proteges/${this.state.protegeId}`;\n  }\n  render() {\n    if (this.state.adding === true) {\n    return (\n      <div className= \"delete\">\n      <h3> Are you sure you want to delete?</h3>\n      <div className=\"delete-button\">\n        <button className =\"button2\" onClick={this.handleClick}>Delete</button>\n        <button className =\"button1\" onClick={this.handleCancel}>Cancel</button>\n        </div>\n        </div>\n    )\n  } else\n  return (\n    <Redirect to='/' />\n  )\n}\n}","// Renders a list of all proteges with details, using props passed down through Routes from App.js\n\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './table.css'\nimport {Table} from 'reactstrap'\n\nconst expenditure = (items) => items.reduce((total, item) => total + item.expenditure, 0)\n\nconst renderProteges = (protegeData) => {\n  // return protegeData.map((protege, index) => {\n    return (\n      <Table className=\"table\">\n       <thead className=\"thead-light\">\n            <tr>\n              <th>Protege Name</th>\n              <th>ProtegeEmail</th>\n              <th>Expenditure</th>\n              <th>Balance</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n      <tbody>\n      {protegeData.map((protege, index) => (\n        <tr>\n          {/* <div className=\"protegelist\" key={index}> */}\n            <td>{protege.protege.protegename}</td>\n              <td>{protege.protege.protegeemail}</td>\n              <td>{expenditure(protege.items)}</td>\n              <td>{1000 - expenditure(protege.items)}</td>\n              <td>\n              <Link to={\"/proteges/\"+protege.protege._id}>\n              <button className=\"button1\">View/edit\n              </button></Link>\n            </td>\n          {/* </div> */}\n        </tr>\n      ))}\n        \n      </tbody>\n      </Table>\n    )\n  // })\n}\n\nconst Proteges = (props) => {\n  const protegeData = props.proteges\n  const displayProteges = renderProteges(protegeData)\n  return displayProteges\n}\n\n\nexport default Proteges;","// Component for creating a protege\nimport './form.css'\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\n\n\nclass CreateProtege extends Component {\n  state = { \n    protegename: '',\n    protegeemail: '',\n    expenditure: '',\n    balance: 1000,\n    addingUser: true\n  }\n\n\n  // HandleClick collects the information from state (via the form) and sends it to the addProtege function, which has been passed in from App.js\n\n  handleClick = (e) => {\n    e.preventDefault()\n    const protegeData = {\n      protegename: this.state.protegename,\n      protegeemail: this.state.protegeemail,\n      expenditure: this.state.expenditure,\n      balance: this.state.balance\n    }\n   this.props.addProtege(protegeData)\n  }\n\n  handleCancel = (e) => {\n    e.preventDefault();\n    window.location = '/';\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value})\n  }\n\n// displays the error messsages\n  displayErrors = (errors) => {\n    return errors.map((error, index) => {\n      return (\n        <div key={index}>\n          <p>{error}</p>\n        </div>\n      )\n    })\n  } \n\n  // The form renders if the addingUser state is false. addingUser is set in App.js\n  render(){\n    \n    let errorMessages = this.props.errorMessages\n    console.log(errorMessages)\n    if (!this.props.addingUser) {\n      return <Redirect to='/' />\n    } else {\n      return (\n        <div className=\"form-box\">\n        <div className=\"form-container-protege\">\n          <div className=\"form-header-box\">\n            <h2 className=\"form-header\">Register a protege</h2>\n          </div>\n          <form className=\"form\" onSubmit={this.handleClick} >\n           <div className=\"form-group\"> \n              <label className=\"label\" htmlFor=\"protegename\">Protege name</label>   \n                  <input className=\"form-control\" \n                    onChange={this.handleChange} \n                    type=\"text\" \n                    required\n                    // className=\"form-control\"\n                    id=\"protegename\" \n                    placeholder=\"protege name\" \n                    value={this.state.protegename} \n                  />\n           </div>\n           <div className=\"form-group\"> \n                <label  className=\"label\" htmlFor=\"protegeemail\">Email</label>\n                <input className=\"form-control\"    \n                      onChange={this.handleChange} \n                      type=\"text\" \n                      required\n                      // className=\"form-control\"\n                      id=\"protegeemail\" \n                      placeholder=\"email\" \n                      value={this.state.protegeemail} \n                    />\n         </div>\n            <div className=\"buttons\">\n              <button className=\"purple-button-form\" onClick={this.handleClick}>Save</button>  \n              <button className=\"pink-button-form\" onClick={this.handleCancel}>Cancel</button>\n            </div>              \n          </form> \n         {/* <FormFeedback>  */}\n         <p className=\"error-message\">{this.displayErrors(errorMessages)} </p>\n         {/* </FormFeedback> */}\n      </div>\n      </div>\n      )\n    }\n  }\n}\n\n\n  export default CreateProtege;","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom'\nimport './form.css'\n\nexport default class EditProtege extends Component {\n  state = {\n    protegename: '',\n    protegeemail: '',\n    editing: true,\n    filledForm: false\n  }\n\n  handleCancel = (e) => {\n    e.preventDefault();\n    window.location = `/proteges/${this.props.match.params.id}`;\n  }\n\n  async componentDidMount() {\n    const protegeId = this.props.match.params.id\n    console.log(protegeId)\n    const getOneProtege = `${process.env.REACT_APP_BACKEND_URL}/proteges/${protegeId}`\n    const protegeResponse = await fetch(getOneProtege)\n    const protegeData = await protegeResponse.json()\n    console.log(protegeData)\n    this.setState({\n      formFilled: true,\n      protegename: protegeData.protege.protegename,\n      protegeemail: protegeData.protege.protegeemail\n    })\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value})\n  }\n\n  handleClick = (e) => {\n    e.preventDefault()\n    // call func\n    this.props.updateProtege(this.state.protegename, this.state.protegeemail, this.props.match.params.id)\n  }\n\n  displayErrors = (errors) => {\n    return errors.map((error, index) => {\n      return (\n        <div key={index}>\n          <p>{error}</p>\n        </div>\n      )\n    })\n  } \n\n  \n  render() {\n     let errorMessages = this.props.errorMessages\n    const { formFilled } = this.state\n    console.log(this.props)\n    if (!formFilled) {\n      return null\n    } else if (this.props.updatingDone) {\n      return (\n        <Redirect to={{\n          pathname: `/proteges/${this.props.match.params.id}`\n        }} />\n      )\n    } else {\n        return (\n           <div className=\"form-box\">\n              <div className=\"form-container-protege\">\n                <div className=\"form-header-box\">\n                  <h2 className=\"form-header\">Edit protege details</h2>\n                </div>\n            <form className=\"form\" onSubmit={this.onSubmit}>\n              <div className=\"form-group\"> \n                <label className=\"label\">Protege name </label>\n                <input type=\"text\"\n                    required\n                    id=\"protegename\" \n                    className=\"form-control\"\n                    value={this.state.protegename}\n                    onChange={this.onChange}\n                    />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"label\">Email </label>\n                <input \n                    type=\"text\" \n                    required\n                    id=\"protegeemail\"\n                    className=\"form-control\"\n                    value={this.state.protegeemail}\n                    onChange={this.onChange}\n                    />\n              </div>\n              <div className=\"buttons\">\n                <button className=\"purple-button-form\" onClick={this.handleClick}>Update</button>\n                <button className=\"pink-button-form\" onClick={this.handleCancel}>Cancel</button>\n              </div>\n              </form>\n            <div><p className=\"error-message\">{this.displayErrors(errorMessages)}</p></div>\n          </div>\n        </div>\n\n        )\n    }\n  }\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Nav from './components/Nav'\nimport GetProtegeData from './components/GetProtegeData'\nimport CreateItem from \"./components/CreateItem\";\nimport EditItem from \"./components/EditItem\";\nimport DeleteItem from \"./components/DeleteItem\";\nimport Proteges from './components/Proteges'\nimport CreateProtege from './components/CreateProtege';\nimport EditProtege from './components/EditProtege';\n\nclass Routes extends React.Component {\n  render() {\n    const { proteges } = this.props\n    return (\n      <BrowserRouter>\n      <Nav />\n      <Switch>\n        {/* Protege routes */}\n        <Route path='/proteges/:id' component={GetProtegeData} /> \n        <Route path='/add' render={() => {\n          return <CreateProtege addProtege={this.props.addProtege} addingUser={this.props.addingUser} errorMessages={this.props.errorMessages} />\n        }} />\n        <Route path='/editprotege/:id' render={(routeProps) => {\n          return <EditProtege updateProtege={this.props.updateProtege} updatingDone={this.props.updatingDone} errorMessages={this.props.errorMessages} {...routeProps} /> }\n        } />\n        \n        {/* Purchased items routes */}\n        <Route path='/create/:id' component={CreateItem} />\n        <Route path='/edit/' component={EditItem} />\n        <Route path='/delete/' component={DeleteItem} />\n\n        {/* Home */}\n        <Route exact path='/' render={() => {\n          return <Proteges proteges={proteges} />\n        }}/>\n      </Switch>\n      </BrowserRouter>\n    ) \n  }\n}\n\nexport default Routes;","import React from 'react';\nimport './App.css';\nimport Routes from './Routes';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  // These states allow for conditional rendering of the forms\n  state = {\n    addingUser: true,\n    updatingDone: null,\n    errorMessages: []\n  }\n  \n  // Gets all the protege data on mount and sets it in state\n  async componentDidMount() {\n    console.log(process.env.NODE_ENV)\n    const getProteges = `${process.env.REACT_APP_BACKEND_URL}/proteges`\n    const protegeResponse = await fetch(getProteges)\n    console.log(protegeResponse);\n    const protegeData = await protegeResponse.json()\n    \n    this.setState({\n      proteges: protegeData,\n      addingUser: true\n    })\n  }\n\n  // Function used by the Update Protege Component to send an update request using the data and set the updating state to true\n  updateProtege = (name, email, id) => {\n    const protege = {\n      protegename: name,\n      protegeemail: email\n    }\n    axios.patch(`${process.env.REACT_APP_BACKEND_URL}/proteges/update/${id}`, protege)\n      .then((res) => {\n        console.log(res)\n        this.setState({\n          updatingDone: true,\n          proteges: res.data.proteges\n        })\n        this.clearErrorMessages();\n      })\n      .catch( (err) => {\n        this.errorMessages(err)\n      })\n    }\n\n    // Ensures the state toggles back so the CreateProtege and updating protege form will show when needed again\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.addingUser !== this.state.addingUser) {\n      this.setState({\n        addingUser: true\n      })\n    }\n    if (prevState.updatingDone !== this.state.updatingDone) {\n      this.setState({\n        updatingDone: false\n      })\n    }\n    \n  }\n\n  // This function is called by CreateProtege component\n  addProtege = (protegeData) => {\n    const newProtege = {\n        protegename: protegeData.protegename, \n        protegeemail: protegeData.protegeemail,\n        expenditure: protegeData.expenditure, \n        balance: protegeData.balance\n    }\n    axios.post(`${process.env.REACT_APP_BACKEND_URL}/proteges/add`, newProtege)\n    .then((res) => {\n      // we get protege array from state      \n      const { proteges } = this.state\n      // we change struture of new protege to match others, using res.data\n      const mutatedProtege = {\n        items: [],\n        protege: res.data\n      }\n      // we add to the state with new protege \n      let updatedProtegeData;\n      updatedProtegeData = proteges\n      updatedProtegeData.push(mutatedProtege)\n      this.setState({\n        proteges: updatedProtegeData,\n        addingUser: false\n      })\n      this.clearErrorMessages();\n    })\n    .catch( (err) => {\n      this.errorMessages(err)\n      })\n      // console.log(this.state.errorMessages)\n  }\n\n// Places the error messages into state so they can be rendered on the relevant form pages. \n// This functions is called in the catches above\n  errorMessages = (err) => {\n    this.setState({errorMessages: err.response.data.messages})\n  }\n\n  clearErrorMessages = () => {\n    this.setState({\n      errorMessages: []\n    })\n  }\n  \n  render() {\n    const { proteges, addingUser } = this.state\n    if (!proteges) {\n      return null\n    } else {\n        return <Routes proteges={proteges} errorMessages={this.state.errorMessages} addProtege={this.addProtege} addingUser={addingUser} updateProtege={this.updateProtege} updatingDone={this.state.updatingDone} />\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}