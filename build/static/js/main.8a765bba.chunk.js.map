{"version":3,"sources":["components/Nav.js","components/ProtegeView.js","components/GetProtegeData.js","components/CreateItem.js","components/EditItem.js","components/DeleteItem.js","components/Proteges.js","components/CreateProtege.js","components/EditProtege.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","react_router_dom","to","className","React","Component","calculateExpenditure","items","reduce","total","item","expenditure","ProtegeView","props","_props$protege","protege","Fragment","protegename","protegeemail","map","index","key","description","pathname","state","renderItems","concat","_id","checkExpenditure","type","onClick","e","window","confirm","preventDefault","console","log","length","alert","axios","delete","process","then","res","status","location","deleteProtege","GetProtegeData","protegeId","this","match","params","id","getOneProtege","fetch","protegeResponse","json","protegeData","setState","components_ProtegeView","CreateItem","_this","date","Date","errorMessages","handleCancel","onChange","Object","defineProperty","target","value","onSubmit","newItem","post","data","catch","err","response","messages","displayErrors","errors","error","handleClick","EditItem","adding","protege_id","onChangeDescription","onChangeExpenditure","itemId","patch","required","react_router","Proteges","renderProteges","proteges","CreateProtege","balance","addingUser","addProtege","handleChange","htmlFor","placeholder","EditProtege","editing","filledForm","updateProtege","formFilled","updatingDone","Routes","Nav_Nav","path","component","render","components_CreateProtege","routeProps","EditProtege_EditProtege","assign","DeleteItem","exact","components_Proteges","App","name","email","clearErrorMessages","newProtege","updatedProtegeData","mutatedProtege","push","getProteges","prevProps","prevState","_this$state","src_Routes","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a765bba.chunk.js","sourcesContent":["import React from 'react';\nimport { Link} from \"react-router-dom\";\n\n  export default class Nav extends React.Component {\n    render() {    \n      return (\n        <nav>\n          <div>\n            <Link to=\"/\" className=\"Nav__brand\">\n              {/* <img src=\"logo.svg\" className=\"Nav__logo\" /> */}\n            </Link>\n\n            <div>\n              <ul>\n                <li>\n                <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                  <Link to=\"/add\">Add a new protege</Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n      );\n    }\n  }","// This component contains the functions responsible for rendering the 'View protege' page\n\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios'\n\n// Renders the purchased items as a list. Called in the ProtegeView function below.\n\nconst renderItems = (items) => {\n  return items.map((item, index) => {\n    return (\n      <div key={index}>\n        <ul>\n          <li> {item.description} | $ {item.expenditure}</li>\n          <Link to= {{\n            pathname: \"/edit\",\n            state: {\n              item,\n            }\n          }}>Edit\n          </Link> \n          <br/>\n          <Link to= {{\n            pathname: \"/delete\",\n            state: {\n              item,\n            }\n          }}>Delete Item\n          </Link> \n        </ul>\n      </div>\n    )\n  })\n} \n\n// This function calculates the total Expenditure by adding the expenditure of each item. Called in the ProtegeView function below\nconst calculateExpenditure = (items) => items.reduce((total, item) => total + item.expenditure, 0)\n\n// Checks the protege isn't over their limit\nconst checkExpenditure = (protege, items) => {\n  if (calculateExpenditure (items) >= 1000) {\n      return <p>Protege has reached their limit</p>\n  } else \n      return(<p><Link to= {{\n        pathname: `/create/${protege._id}`,\n        }}>\n          Add Item\n        </Link></p> )\n}\n\n// This function validates the protege has no purchases before deleting the protege\nconst deleteProtege = (e, protege, items) => {\n  e.preventDefault();\n  console.log(protege)\n  console.log(items)\n  if (items.length !== 0) {\n    return window.alert('Please delete all items before you delete the protege')\n  }\n    else {\n      axios.delete(`${process.env.REACT_APP_BACKEND_URL}/proteges/${protege._id}`)\n    .then (res => {\n      console.log(res)\n    if (res.status === 200) {\n      window.location = '/';\n    }})\n  } \n}\n\n// Renders a page with one protege's details, using props passed down to it from the GetProtegeData component. This function calls the renderItems and the calculateExpenditure Functions\n// It also calls the deleteProtege function on click\n\nconst ProtegeView = (props) => {\n  const {protege, items} = props.protege\n\n  return (\n    <>\n      <h1>Name: {protege.protegename}</h1>\n      <p>Email: {protege.protegeemail}</p>\n      <h2>Items purchased: {renderItems(items)}</h2>\n      <h2>Total spent: {calculateExpenditure(items)}</h2>\n      <h2>Balance: {1000 - calculateExpenditure(items)}</h2>\n      {checkExpenditure(protege, items)}\n          <Link to= {{\n            pathname: `/editprotege/${protege._id}`\n          }}>\n          Edit protege details\n          </Link> \n          <p></p>\n          <button type=\"submit\" onClick={e => {if (window.confirm('Are you sure you want to delete')) deleteProtege(e, protege, items)}}>\n              Delete protege\n            </button>\n    </>\n  )\n}\n\nexport default ProtegeView;","// This component gets the protege data and sends it as props to the protegeView component\n\nimport React from 'react';\nimport ProtegeView from './ProtegeView'\n\nclass GetProtegeData extends React.Component {\n  \n  state = {\n    protege: null\n  }\n  \n  async componentDidMount() {\n    const protegeId = this.props.match.params.id\n    const getOneProtege = `${process.env.REACT_APP_BACKEND_URL}/proteges/${protegeId}`\n    const protegeResponse = await fetch(getOneProtege)\n    const protegeData = await protegeResponse.json()\n\n    this.setState({\n      protege: protegeData    \n    })\n  }\n  render() {\n    const { protege } = this.state\n    if (!protege) {\n      return null\n    }\n    return (\n      <ProtegeView protege={protege} />\n    )\n  }\n}\n\nexport default GetProtegeData","// Component for creating an item\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class CreateItem extends Component {\n  \n  // protege id is picked up from url\n  state = {\n      protegeId: this.props.match.params.id,\n      description: '',\n      date: new Date(),\n      errorMessages: []\n    }\n  \n    handleCancel = (e) => {\n      window.location = `/proteges/${this.props.match.params.id}`;\n    }\n\n    onChange = (e) => {\n      this.setState({ [e.target.id]: e.target.value})\n    }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    // collects data from state, sends post request and redirects back to the page where the protege where the item was added\n    const newItem = {\n      protegeId: this.state.protegeId,\n      description: this.state.description,\n      expenditure: this.state.expenditure,\n      date: this.state.date\n    }\n\n    console.log(newItem);\n    \n    axios.post(`${process.env.REACT_APP_BACKEND_URL}/items/add`, newItem)\n      .then(res => {\n      console.log(res.data)\n      window.location = `/proteges/${this.props.match.params.id}`\n    })\n    .catch((err) => {\n      this.setState({errorMessages: err.response.data.messages})\n    })\n  }\n\n// displays the error messages\ndisplayErrors = (errors) => {\n    return errors.map((error, index) => {\n      return (\n        <div key={index}>\n          <p>{error}</p>\n        </div>\n      )\n    })\n  } \n\n  // Form for collecting item data\n  render() {\n     let errorMessages = this.state.errorMessages\n     console.log(errorMessages)\n    return (\n    <div>\n      <h3>Create New Item </h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\"> \n          <label>Description: </label>\n          <input  type=\"text\"\n              id=\"description\"\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChange}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Expenditure: </label>\n          <input \n              type=\"number\" \n              id=\"expenditure\"\n              className=\"form-control\"\n              value={this.state.expenditure}\n              onChange={this.onChange}\n              />\n        </div>\n\n        <button onClick={this.handleClick}>Save</button>\n        <button onClick={this.handleCancel}>Cancel</button>\n      </form>\n      <div><p>{this.displayErrors(errorMessages)}</p></div>\n    </div>\n    )\n  }\n}","// Component used for updating an item \n\nimport React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom'\nimport axios from 'axios';\n\nexport default class EditItem extends Component {\n    state = {\n      description: '',\n      expenditure: '',\n      adding: true,\n      errorMessages: []\n    }\n  \n  handleCancel = (e) => {\n    e.preventDefault();\n    window.location = `/proteges/${this.props.location.state.item.protege_id}`;\n  }\n\n  // Sets the state from the props passed in via the link on the ProtegeView page\n  componentDidMount(){\n    this.setState({\n      description: this.props.location.state.item.description,\n      expenditure: this.props.location.state.item.expenditure,\n      itemId: this.props.location.state.item._id,\n      protegeId: this.props.location.state.item.protege_id\n    })\n    console.log(this.props.location.state.item)\n  }\n\n  // Handles changes in form and updates state\n  onChangeDescription = (e) => {\n    this.setState({\n      description: e.target.value\n    })\n  }\n\n  onChangeExpenditure = (e) => {\n    this.setState({\n      expenditure: e.target.value\n    })\n  }\n\n// On click this function creates an item and sends it via a patch request \n  handleClick = (e) => {\n    e.preventDefault();\n\n    const item = {\n      description: this.state.description,\n      expenditure: this.state.expenditure,\n      itemId: this.state.itemId,\n      protegeId: this.state.protegeId\n    }\n    console.log('edit')\n    console.log(item);\n\n   axios.patch(`${process.env.REACT_APP_BACKEND_URL}/items/update/${item.itemId}`, item)\n      .then(res => {\n        console.log(res.data)\n        window.location = `/proteges/${this.props.location.state.item.protege_id}`\n      })\n      .catch((err) => {\n        this.setState({errorMessages: err.response.data.messages})\n      })\n    }\n\n// Displays the error messages\n  displayErrors = (errors) => {\n    return errors.map((error, index) => {\n      return (\n        <div key={index}>\n          <p>{error}</p>\n        </div>\n      )\n    })\n  } \n\n\n  // Form is rendered if adding state is true, else it redirects home\n  render() {\n     let errorMessages = this.state.errorMessages\n\n    if (this.state.adding === true) {\n    return (\n    <div>\n      <h3>Edit Item </h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\"> \n          <label>Description: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Expenditure: </label>\n          <input \n              type=\"number\" \n              required\n              className=\"form-control\"\n              value={this.state.expenditure}\n              onChange={this.onChangeExpenditure}\n              />\n        </div>\n\n        <button onClick={this.handleClick}>Update</button>\n        <button onClick={this.handleCancel}>Cancel</button>\n      </form>\n      <div><p>{this.displayErrors(errorMessages)}</p></div>\n    </div>\n    )\n  } else\n  return (\n    <Redirect to='/' />\n  )\n}\n}","// Component used for deleting an item\n\nimport React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom'\nimport axios from 'axios';\nexport default class EditItem extends Component {\n \n    state = {\n      description: '',\n      expenditure: '',\n      adding: true\n    }\n  \n  handleCancel = (e) => {\n    e.preventDefault();\n    window.location = `/proteges/${this.props.location.state.item.protege_id}`;\n  }\n\n  componentDidMount(){\n    this.setState({\n      description: this.props.location.state.item.description,\n      expenditure: this.props.location.state.item.expenditure,\n      itemId: this.props.location.state.item._id,\n      protegeId: this.props.location.state.item.protege_id\n    })\n    console.log(this.props.location.state.item)\n  }\n\n\n  handleClick = (e) => {\n    e.preventDefault();\n   \n\n    const item = {\n      description: this.state.description,\n      expenditure: this.state.expenditure,\n      itemId: this.state.itemId,\n      protegeId: this.state.protegeId\n    }\n    console.log('edit')\n    console.log(item);\n    \n\n    axios.delete(`${process.env.REACT_APP_BACKEND_URL}/items/${item.itemId}`, item)\n      .then(res => console.log(res.data));\n    window.location = `/proteges/${this.state.protegeId}`;\n  }\n  render() {\n    if (this.state.adding === true) {\n    return (\n      <>\n      <h3> Are you sure you want to delete?</h3>\n        <button onClick={this.handleClick}>Delete</button>\n        <button onClick={this.handleCancel}>Cancel</button>\n        </>\n    )\n  } else\n  return (\n    <Redirect to='/' />\n  )\n}\n}","// Renders a list of all proteges with details, using props passed down through Routes from App.js\n\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst expenditure = (items) => items.reduce((total, item) => total + item.expenditure, 0)\n\nconst renderProteges = (protegeData) => {\n  return protegeData.map((protege, index) => {\n    return (\n      <div className=\"protegelist\" key={index}>\n        <h2>{protege.protege.protegename}</h2>\n        <ul>\n          <li>Email: {protege.protege.protegeemail}</li>\n          <li>Expenditure: {expenditure(protege.items)}</li>\n          <li>Balance: {1000 - expenditure(protege.items)}</li>\n          <li><Link to={\"/proteges/\"+protege.protege._id}>View/edit</Link></li>\n        </ul>\n      </div>\n    )\n  })\n}\n\nconst Proteges = (props) => {\n  const protegeData = props.proteges\n  const displayProteges = renderProteges(protegeData)\n  return displayProteges\n}\n\nexport default Proteges;","// Component for creating a protege\n\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\n\n\nclass CreateProtege extends Component {\n  state = { \n    protegename: '',\n    protegeemail: '',\n    expenditure: '',\n    balance: 1000,\n    addingUser: true\n  }\n\n\n  // HandleClick collects the information from state (via the form) and sends it to the addProtege function, which has been passed in from App.js\n\n  handleClick = (e) => {\n    e.preventDefault()\n    const protegeData = {\n      protegename: this.state.protegename,\n      protegeemail: this.state.protegeemail,\n      expenditure: this.state.expenditure,\n      balance: this.state.balance\n    }\n   this.props.addProtege(protegeData)\n  }\n\n  handleCancel = (e) => {\n    e.preventDefault();\n    window.location = '/';\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value})\n  }\n\n// displays the error messsages\n  displayErrors = (errors) => {\n    return errors.map((error, index) => {\n      return (\n        <div key={index}>\n          <p>{error}</p>\n        </div>\n      )\n    })\n  } \n\n  // The form renders if the addingUser state is false. addingUser is set in App.js\n  render(){\n    \n    let errorMessages = this.props.errorMessages\n    console.log(errorMessages)\n    if (!this.props.addingUser) {\n      return <Redirect to='/' />\n    } else {\n      return (\n        <div>\n          <h1>Protege form</h1>\n          <form onSubmit={this.handleClick} >\n          <div className=\"form-group\"> \n            <label htmlFor=\"protegename\">Protege name</label>\n              <input \n                onChange={this.handleChange} \n                type=\"text\" \n                required\n                className=\"form-control\"\n                id=\"protegename\" \n                placeholder=\"protege name\" \n                value={this.state.protegename} \n              />\n              <label htmlFor=\"protegeemail\">Email</label>\n              <input \n                onChange={this.handleChange} \n                type=\"text\" \n                required\n                className=\"form-control\"\n                id=\"protegeemail\" \n                placeholder=\"email\" \n                value={this.state.protegeemail} \n              />\n              <button onClick={this.handleClick}>Save</button>\n              <button onClick={this.handleCancel}>Cancel</button>\n              \n          </div>\n          \n          </form>\n          <div><p>{this.displayErrors(errorMessages)}</p></div>\n        </div>\n      )\n    }\n  }\n}\n\n\n  export default CreateProtege;","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom'\n\nexport default class EditProtege extends Component {\n  state = {\n    protegename: '',\n    protegeemail: '',\n    editing: true,\n    filledForm: false\n  }\n\n  handleCancel = (e) => {\n    e.preventDefault();\n    window.location = `/proteges/${this.props.match.params.id}`;\n  }\n\n  async componentDidMount() {\n    const protegeId = this.props.match.params.id\n    console.log(protegeId)\n    const getOneProtege = `${process.env.REACT_APP_BACKEND_URL}/proteges/${protegeId}`\n    const protegeResponse = await fetch(getOneProtege)\n    const protegeData = await protegeResponse.json()\n    console.log(protegeData)\n    this.setState({\n      formFilled: true,\n      protegename: protegeData.protege.protegename,\n      protegeemail: protegeData.protege.protegeemail\n    })\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value})\n  }\n\n  handleClick = (e) => {\n    e.preventDefault()\n    // call func\n    this.props.updateProtege(this.state.protegename, this.state.protegeemail, this.props.match.params.id)\n  }\n\n  displayErrors = (errors) => {\n    return errors.map((error, index) => {\n      return (\n        <div key={index}>\n          <p>{error}</p>\n        </div>\n      )\n    })\n  } \n\n  \n  render() {\n     let errorMessages = this.props.errorMessages\n    const { formFilled } = this.state\n    console.log(this.props)\n    if (!formFilled) {\n      return null\n    } else if (this.props.updatingDone) {\n      return (\n        <Redirect to={{\n          pathname: `/proteges/${this.props.match.params.id}`\n        }} />\n      )\n    } else {\n        return (\n          <div>\n            <h3>Edit Protege \n            </h3>\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\"> \n                <label>Name: </label>\n                <input type=\"text\"\n                    required\n                    id=\"protegename\" \n                    className=\"form-control\"\n                    value={this.state.protegename}\n                    onChange={this.onChange}\n                    />\n              </div>\n              <div className=\"form-group\">\n                <label>Email: </label>\n                <input \n                    type=\"text\" \n                    required\n                    id=\"protegeemail\"\n                    className=\"form-control\"\n                    value={this.state.protegeemail}\n                    onChange={this.onChange}\n                    />\n              </div>\n      \n              <button onClick={this.handleClick}>Update</button>\n              <button onClick={this.handleCancel}>Cancel</button>\n            </form>\n            <div><p>{this.displayErrors(errorMessages)}</p></div>\n          </div>\n        )\n    }\n  }\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Nav from './components/Nav'\nimport GetProtegeData from './components/GetProtegeData'\nimport CreateItem from \"./components/CreateItem\";\nimport EditItem from \"./components/EditItem\";\nimport DeleteItem from \"./components/DeleteItem\";\nimport Proteges from './components/Proteges'\nimport CreateProtege from './components/CreateProtege';\nimport EditProtege from './components/EditProtege';\n\nclass Routes extends React.Component {\n  render() {\n    const { proteges } = this.props\n    return (\n      <BrowserRouter>\n      <Nav />\n      <Switch>\n        {/* Protege routes */}\n        <Route path='/proteges/:id' component={GetProtegeData} /> \n        <Route path='/add' render={() => {\n          return <CreateProtege addProtege={this.props.addProtege} addingUser={this.props.addingUser} errorMessages={this.props.errorMessages} />\n        }} />\n        <Route path='/editprotege/:id' render={(routeProps) => {\n          return <EditProtege updateProtege={this.props.updateProtege} updatingDone={this.props.updatingDone} errorMessages={this.props.errorMessages} {...routeProps} /> }\n        } />\n        \n        {/* Purchased items routes */}\n        <Route path='/create/:id' component={CreateItem} />\n        <Route path='/edit/' component={EditItem} />\n        <Route path='/delete/' component={DeleteItem} />\n\n        {/* Home */}\n        <Route exact path='/' render={() => {\n          return <Proteges proteges={proteges} />\n        }}/>\n      </Switch>\n      </BrowserRouter>\n    ) \n  }\n}\n\nexport default Routes;","import React from 'react';\nimport './App.css';\nimport Routes from './Routes';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  // These states allow for conditional rendering of the forms\n  state = {\n    addingUser: true,\n    updatingDone: null,\n    errorMessages: []\n  }\n  \n  // Gets all the protege data on mount and sets it in state\n  async componentDidMount() {\n    console.log(process.env.NODE_ENV)\n    const getProteges = `${process.env.REACT_APP_BACKEND_URL}/proteges`\n    const protegeResponse = await fetch(getProteges)\n    console.log(protegeResponse);\n    const protegeData = await protegeResponse.json()\n    \n    this.setState({\n      proteges: protegeData,\n      addingUser: true\n    })\n  }\n\n  // Function used by the Update Protege Component to send an update request using the data and set the updating state to true\n  updateProtege = (name, email, id) => {\n    const protege = {\n      protegename: name,\n      protegeemail: email\n    }\n    axios.patch(`${process.env.REACT_APP_BACKEND_URL}/proteges/update/${id}`, protege)\n      .then((res) => {\n        console.log(res)\n        this.setState({\n          updatingDone: true,\n          proteges: res.data.proteges\n        })\n        this.clearErrorMessages();\n      })\n      .catch( (err) => {\n        this.errorMessages(err)\n      })\n    }\n\n    // Ensures the state toggles back so the CreateProtege and updating protege form will show when needed again\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.addingUser !== this.state.addingUser) {\n      this.setState({\n        addingUser: true\n      })\n    }\n    if (prevState.updatingDone !== this.state.updatingDone) {\n      this.setState({\n        updatingDone: false\n      })\n    }\n    \n  }\n\n  // This function is called by CreateProtege component\n  addProtege = (protegeData) => {\n    const newProtege = {\n        protegename: protegeData.protegename, \n        protegeemail: protegeData.protegeemail,\n        expenditure: protegeData.expenditure, \n        balance: protegeData.balance\n    }\n    axios.post(`${process.env.REACT_APP_BACKEND_URL}/proteges/add`, newProtege)\n    .then((res) => {\n      // we get protege array from state      \n      const { proteges } = this.state\n      // we change struture of new protege to match others, using res.data\n      const mutatedProtege = {\n        items: [],\n        protege: res.data\n      }\n      // we add to the state with new protege \n      let updatedProtegeData;\n      updatedProtegeData = proteges\n      updatedProtegeData.push(mutatedProtege)\n      this.setState({\n        proteges: updatedProtegeData,\n        addingUser: false\n      })\n      this.clearErrorMessages();\n    })\n    .catch( (err) => {\n      this.errorMessages(err)\n      })\n      // console.log(this.state.errorMessages)\n  }\n\n// Places the error messages into state so they can be rendered on the relevant form pages. \n// This functions is called in the catches above\n  errorMessages = (err) => {\n    this.setState({errorMessages: err.response.data.messages})\n  }\n\n  clearErrorMessages = () => {\n    this.setState({\n      errorMessages: []\n    })\n  }\n  \n  render() {\n    const { proteges, addingUser } = this.state\n    if (!proteges) {\n      return null\n    } else {\n        return <Routes proteges={proteges} errorMessages={this.state.errorMessages} addProtege={this.addProtege} addingUser={addingUser} updateProtege={this.updateProtege} updatingDone={this.state.updatingDone} />\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}